package com.plexobject.testplayer.tree;

import com.plexobject.testplayer.tree.MethodStackTree;
import junit.framework.TestCase;

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL. Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for informations about the tool, the licence and the authors.
 */


public class MethodStackTreeTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  com.plexobject.testplayer.tree.MethodStackTree methodstacktree = null;
  // JUnitDoclet end class
  
  public MethodStackTreeTest(String name) {
    // JUnitDoclet begin method MethodStackTreeTest
    super(name);
    // JUnitDoclet end method MethodStackTreeTest
  }
  
  public com.plexobject.testplayer.tree.MethodStackTree createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new com.plexobject.testplayer.tree.MethodStackTree();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    methodstacktree = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    methodstacktree = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testToString() throws Exception {
    // JUnitDoclet begin method toString
    // JUnitDoclet end method toString
  }
  
  public void testEquals() throws Exception {
    // JUnitDoclet begin method equals
    // JUnitDoclet end method equals
  }
  
  public void testAdd() throws Exception {
    // JUnitDoclet begin method add
    // JUnitDoclet end method add
  }
  
  public void testVisit() throws Exception {
    // JUnitDoclet begin method visit
    // JUnitDoclet end method visit
  }
  
  public void testIterator() throws Exception {
    // JUnitDoclet begin method iterator
    // JUnitDoclet end method iterator
  }
  
  public void testSize() throws Exception {
    // JUnitDoclet begin method size
    // JUnitDoclet end method size
  }
  
  public void testFind() throws Exception {
    // JUnitDoclet begin method find
    // JUnitDoclet end method find
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(MethodStackTreeTest.class);
    // JUnitDoclet end method testcase.main
  }
}
