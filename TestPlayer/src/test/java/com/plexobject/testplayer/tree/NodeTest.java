package com.plexobject.testplayer.tree;

import junit.framework.TestCase;
// JUnitDoclet begin import
import com.plexobject.testplayer.tree.Node;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class NodeTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  com.plexobject.testplayer.tree.Node node = null;
  // JUnitDoclet end class
  
  public NodeTest(String name) {
    // JUnitDoclet begin method NodeTest
    super(name);
    // JUnitDoclet end method NodeTest
  }
  
  public com.plexobject.testplayer.tree.Node createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new com.plexobject.testplayer.tree.Node();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    node = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    node = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testToString() throws Exception {
    // JUnitDoclet begin method toString
    // JUnitDoclet end method toString
  }
  
  public void testHashCode() throws Exception {
    // JUnitDoclet begin method hashCode
    // JUnitDoclet end method hashCode
  }
  
  public void testEquals() throws Exception {
    // JUnitDoclet begin method equals
    // JUnitDoclet end method equals
  }
  
  public void testGetParentObject() throws Exception {
    // JUnitDoclet begin method getParentObject
    // JUnitDoclet end method getParentObject
  }
  
  public void testSetGetParent() throws Exception {
    // JUnitDoclet begin method setParent getParent
    com.plexobject.testplayer.tree.Node[] tests = {new com.plexobject.testplayer.tree.Node(), null};
    
    for (int i = 0; i < tests.length; i++) {
      node.setParent(tests[i]);
      assertEquals(tests[i], node.getParent());
    }
    // JUnitDoclet end method setParent getParent
  }
  
  public void testSetGetObject() throws Exception {
    // JUnitDoclet begin method setObject getObject
    java.lang.Object[] tests = {new java.lang.Object(), null};
    
    for (int i = 0; i < tests.length; i++) {
      node.setObject(tests[i]);
      assertEquals(tests[i], node.getObject());
    }
    // JUnitDoclet end method setObject getObject
  }
  
  public void testGetChildrenValues() throws Exception {
    // JUnitDoclet begin method getChildrenValues
    // JUnitDoclet end method getChildrenValues
  }
  
  public void testVisitChildren() throws Exception {
    // JUnitDoclet begin method visitChildren
    // JUnitDoclet end method visitChildren
  }
  
  public void testVisitParents() throws Exception {
    // JUnitDoclet begin method visitParents
    // JUnitDoclet end method visitParents
  }
  
  public void testIterator() throws Exception {
    // JUnitDoclet begin method iterator
    // JUnitDoclet end method iterator
  }
  
  public void testSetGetChildren() throws Exception {
    // JUnitDoclet begin method setChildren getChildren
    java.util.List[] tests = {new java.util.List(), null};
    
    for (int i = 0; i < tests.length; i++) {
      node.setChildren(tests[i]);
      assertEquals(tests[i], node.getChildren());
    }
    // JUnitDoclet end method setChildren getChildren
  }
  
  public void testAddChild() throws Exception {
    // JUnitDoclet begin method addChild
    // JUnitDoclet end method addChild
  }
  
  public void testGetAttribute() throws Exception {
    // JUnitDoclet begin method getAttribute
    // JUnitDoclet end method getAttribute
  }
  
  public void testSetAttribute() throws Exception {
    // JUnitDoclet begin method setAttribute
    // JUnitDoclet end method setAttribute
  }
  
  public void testChildrenCount() throws Exception {
    // JUnitDoclet begin method childrenCount
    // JUnitDoclet end method childrenCount
  }
  
  public void testParentsCount() throws Exception {
    // JUnitDoclet begin method parentsCount
    // JUnitDoclet end method parentsCount
  }
  
  public void testFind() throws Exception {
    // JUnitDoclet begin method find
    // JUnitDoclet end method find
  }
  
  public void testAccept() throws Exception {
    // JUnitDoclet begin method accept
    // JUnitDoclet end method accept
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(NodeTest.class);
    // JUnitDoclet end method testcase.main
  }
}
