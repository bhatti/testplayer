package com.plexobject.testplayer;

import com.plexobject.testplayer.MethodEntry;
import junit.framework.TestCase;

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL. Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for informations about the tool, the licence and the authors.
 */


public class MethodEntryTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  com.plexobject.testplayer.MethodEntry methodentry = null;
  // JUnitDoclet end class
  
  public MethodEntryTest(String name) {
    // JUnitDoclet begin method MethodEntryTest
    super(name);
    // JUnitDoclet end method MethodEntryTest
  }
  
  public com.plexobject.testplayer.MethodEntry createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new com.plexobject.testplayer.MethodEntry();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    methodentry = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    methodentry = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetCallerName() throws Exception {
    // JUnitDoclet begin method getCallerName
    // JUnitDoclet end method getCallerName
  }
  
  public void testGetCallerNameWithoutPackage() throws Exception {
    // JUnitDoclet begin method getCallerNameWithoutPackage
    // JUnitDoclet end method getCallerNameWithoutPackage
  }
  
  public void testGetCallerPackageName() throws Exception {
    // JUnitDoclet begin method getCallerPackageName
    // JUnitDoclet end method getCallerPackageName
  }
  
  public void testGetCalleeName() throws Exception {
    // JUnitDoclet begin method getCalleeName
    // JUnitDoclet end method getCalleeName
  }
  
  public void testGetCalleeNameWithoutPackage() throws Exception {
    // JUnitDoclet begin method getCalleeNameWithoutPackage
    // JUnitDoclet end method getCalleeNameWithoutPackage
  }
  
  public void testGetCalleePackageName() throws Exception {
    // JUnitDoclet begin method getCalleePackageName
    // JUnitDoclet end method getCalleePackageName
  }
  
  public void testIsVoidMethod() throws Exception {
    // JUnitDoclet begin method isVoidMethod
    // JUnitDoclet end method isVoidMethod
  }
  
  public void testGetMethodName() throws Exception {
    // JUnitDoclet begin method getMethodName
    // JUnitDoclet end method getMethodName
  }
  
  public void testGetMethodNameWithInvocationCount() throws Exception {
    // JUnitDoclet begin method getMethodNameWithInvocationCount
    // JUnitDoclet end method getMethodNameWithInvocationCount
  }
  
  public void testGetMethodReturnType() throws Exception {
    // JUnitDoclet begin method getMethodReturnType
    // JUnitDoclet end method getMethodReturnType
  }
  
  public void testGetMethodReturnTypeWithoutPackage() throws Exception {
    // JUnitDoclet begin method getMethodReturnTypeWithoutPackage
    // JUnitDoclet end method getMethodReturnTypeWithoutPackage
  }
  
  public void testGetArgumentTypes() throws Exception {
    // JUnitDoclet begin method getArgumentTypes
    // JUnitDoclet end method getArgumentTypes
  }
  
  public void testToString() throws Exception {
    // JUnitDoclet begin method toString
    // JUnitDoclet end method toString
  }
  
  public void testToLongString() throws Exception {
    // JUnitDoclet begin method toLongString
    // JUnitDoclet end method toLongString
  }
  
  public void testToShortString() throws Exception {
    // JUnitDoclet begin method toShortString
    // JUnitDoclet end method toShortString
  }
  
  public void testHashCode() throws Exception {
    // JUnitDoclet begin method hashCode
    // JUnitDoclet end method hashCode
  }
  
  public void testEquals() throws Exception {
    // JUnitDoclet begin method equals
    // JUnitDoclet end method equals
  }
  
  public void testSetGetId() throws Exception {
    // JUnitDoclet begin method setId getId
    long[] tests = {Long.MIN_VALUE, -1, 0, 1, Long.MAX_VALUE};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setId(tests[i]);
      assertEquals(tests[i], methodentry.getId());
    }
    // JUnitDoclet end method setId getId
  }
  
  public void testSetGetParentID() throws Exception {
    // JUnitDoclet begin method setParentID getParentID
    long[] tests = {Long.MIN_VALUE, -1, 0, 1, Long.MAX_VALUE};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setParentID(tests[i]);
      assertEquals(tests[i], methodentry.getParentID());
    }
    // JUnitDoclet end method setParentID getParentID
  }
  
  public void testGetCaller() throws Exception {
    // JUnitDoclet begin method getCaller
    // JUnitDoclet end method getCaller
  }
  
  public void testGetCallee() throws Exception {
    // JUnitDoclet begin method getCallee
    // JUnitDoclet end method getCallee
  }
  
  public void testSetGetSignature() throws Exception {
    // JUnitDoclet begin method setSignature getSignature
    String[] tests = {new String(), null};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setSignature(tests[i]);
      assertEquals(tests[i], methodentry.getSignature());
    }
    // JUnitDoclet end method setSignature getSignature
  }
  
  public void testGetSignatureValues() throws Exception {
    // JUnitDoclet begin method getSignatureValues
    // JUnitDoclet end method getSignatureValues
  }
  
  public void testSetGetArgumentValues() throws Exception {
    // JUnitDoclet begin method setArgumentValues getArgumentValues
    java.lang.Object[][] tests = {new java.lang.Object[0] , null};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setArgumentValues(tests[i]);
      assertEquals(tests[i], methodentry.getArgumentValues());
    }
    // JUnitDoclet end method setArgumentValues getArgumentValues
  }
  
  public void testSetGetReturnValue() throws Throwable {
    // JUnitDoclet begin method setReturnValue getReturnValue
    Object[] tests = {new Object(), null};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setReturnValue(tests[i]);
      assertEquals(tests[i], methodentry.getReturnValue());
    }
    // JUnitDoclet end method setReturnValue getReturnValue
  }
  
  public void testSetGetException() throws Exception {
    // JUnitDoclet begin method setException getException
    Throwable[] tests = {new Throwable(), null};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setException(tests[i]);
      assertEquals(tests[i], methodentry.getException());
    }
    // JUnitDoclet end method setException getException
  }
  
  public void testGetResponseTime() throws Exception {
    // JUnitDoclet begin method getResponseTime
    // JUnitDoclet end method getResponseTime
  }
  
  public void testIsCompleted() throws Exception {
    // JUnitDoclet begin method isCompleted
    // JUnitDoclet end method isCompleted
  }
  
  public void testSetGetParent() throws Exception {
    // JUnitDoclet begin method setParent getParent
    MethodEntry[] tests = {new MethodEntry(), null};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setParent(tests[i]);
      assertEquals(tests[i], methodentry.getParent());
    }
    // JUnitDoclet end method setParent getParent
  }
  
  public void testIsTopMethod() throws Exception {
    // JUnitDoclet begin method isTopMethod
    // JUnitDoclet end method isTopMethod
  }
  
  public void testGetTopMethod() throws Exception {
    // JUnitDoclet begin method getTopMethod
    // JUnitDoclet end method getTopMethod
  }
  
  public void testSetGetSameMethodNumber() throws Exception {
    // JUnitDoclet begin method setSameMethodNumber getSameMethodNumber
    int[] tests = {Integer.MIN_VALUE, -1, 0, 1, Integer.MAX_VALUE};
    
    for (int i = 0; i < tests.length; i++) {
      methodentry.setSameMethodNumber(tests[i]);
      assertEquals(tests[i], methodentry.getSameMethodNumber());
    }
    // JUnitDoclet end method setSameMethodNumber getSameMethodNumber
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(MethodEntryTest.class);
    // JUnitDoclet end method testcase.main
  }
}
